
how to write api which fetch user or room by searching username or group name for creating new chat


User model

import mongoose, { Schema, Document } from "mongoose";

export interface IUser extends Document {
  email: string;
  password: string;
  username: string;
  firstName?: string;
  lastName?: string;
  fullName?: string;
  profilePicture?: string;
  bio?: string;
  location?: string;
  language?: string;
  timezone?: string;
  createdAt: Date;
  updatedAt: Date;
  lastOnline?: Date;
  status?: string;
}

const UserSchema: Schema = new Schema(
  {
    email: { type: String, required: true, unique: true },
    password: { type: String, required: true },
    username: { type: String, required: true, unique: true },
    firstName: { type: String },
    lastName: { type: String },
    fullName: { type: String },
    profilePicture: { type: String },
    bio: { type: String },
    location: { type: String },
    language: { type: String },
    timezone: { type: String },
    lastOnline: { type: Date },
    status: {
      type: String,
      default: "offline",
      enum: ["online", "offline", "busy", "away"],
    },
  },
  {
    timestamps: true,
  }
);

const User = mongoose.model<IUser>("User", UserSchema);

export default User;


Room model

import mongoose, { Document, Schema } from "mongoose";

export interface IRoom extends Document {
  name: string;
  type: string;
  participants: string[]; // Array of user IDs
  createdAt: Date;
  updatedAt: Date;
}

const roomSchema: Schema = new Schema(
  {
    name: { type: String, default: "" },
    type: {
      type: String,
      enum: ["group", "direct"],
      required: true,
      default: "group",
    },
    participants: [
      {
        type: Schema.Types.ObjectId,
        ref: "User",
        required: true,
      },
    ],
  },
  {
    timestamps: true,
  }
);

const Room = mongoose.model<IRoom>("Room", roomSchema);
export default Room;
